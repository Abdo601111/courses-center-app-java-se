/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ga.tc.authentication.ui;

import com.ga.tc.common.Constants;
import com.ga.tc.security.bao.SecurityBao;
import com.ga.tc.security.bao.SecurityBaoImpl;
import com.ga.tc.security.dto.RoleInfoDto;
import com.ga.tc.security.dto.ScreenDto;
import java.util.List;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class PermissionManager extends javax.swing.JPanel {

    /**
     * Creates new form PermissionManager
     */
    public PermissionManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rolesCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        screensTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/ga/tc/common/lang"); // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("Manage.Role.Permission"))); // NOI18N

        jLabel1.setText(bundle.getString("security.screens.role.role_name")); // NOI18N

        rolesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        fillInRoles();

        screensTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        initializeScreensTable() ;
        jScrollPane1.setViewportView(screensTable);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancle");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rolesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rolesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            int result = JOptionPane.showConfirmDialog(this, "Be careful this save action may harms the user access control.\n"
                    + "Do you wanna proceed?");
            if(result == 0){
                //call save permission method
                int index = 0;
                for(ScreenDto s:screens){
                    s.setHasViewOnlyAccess((boolean)screensTable.getValueAt(index, 5));
                    s.setHasFullControlAccess((boolean)screensTable.getValueAt(index, 6));
                    index ++;
                }
                business.updateRolePermissions(((RoleInfoDto)rolesCombo.getSelectedItem()).getId(), screens);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Something went wrong :( try agina later" + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private SecurityBao business = new SecurityBaoImpl();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> rolesCombo;
    private javax.swing.JTable screensTable;
    // End of variables declaration//GEN-END:variables
private void fillInRoles() {
        Vector<RoleInfoDto> model = new Vector<>();
        try {
            List<RoleInfoDto> allRoles = secBusiness.listAll(Constants.STATUS_ACTIVE);
            if (allRoles != null && !allRoles.isEmpty()) {
                for (RoleInfoDto role : allRoles) {
                    model.addElement(role);
                }
            }
            rolesCombo = new JComboBox(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private SecurityBao secBusiness = new SecurityBaoImpl();
    private SecurityBao screenBusiness =  new SecurityBaoImpl();
    private List<ScreenDto> screens ;
 private void initializeScreensTable() {
        try{
            screens = screenBusiness.listAllScreens(Constants.STATUS_LIST_ALL);
            Object [][] data = new Object[screens.size()][7];
            for(int i=0;i<screens.size();i++){
                data[i][0] = screens.get(i).getId();
                data[i][1] = screens.get(i).getNameAr();
                data[i][2] = screens.get(i).getNameEn();
                data[i][3] = screens.get(i).getCode();
                data[i][4] = screens.get(i).isActive();
                data[i][5] = screens.get(i).isHasViewOnlyAccess();
                data[i][6] = screens.get(i).isHasFullControlAccess();
            }
            
            String [] headers = new String [] {
                    "#", "إسم عربي", "English Name", "Code", "Active", "View Only", "Full Control"};    
        
            DefaultTableModel model = new DefaultTableModel(data, headers);
            screensTable = new JTable(model){
                @Override
                public boolean isCellEditable(int row, int column) {
                    if(column <= 4)
                        return false;
                    return true;
                }
                
                @Override
                public Class<?> getColumnClass(int column) {
                    switch(column){
                       case 0:
                           return Integer.class;
                       case 1:
                           return String.class;
                       case 2:
                           return String.class;
                       case 3:
                           return String.class;
                       case 4:
                           return Boolean.class;
                       case 5:
                           return Boolean.class;
                       case 6:
                           return Boolean.class;    
                           
                       default:
                           return Integer.class;
                   }   
                }
                
            };
               
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
}
