/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ga.tc.authentication.ui;

import com.ga.tc.common.Constants;
import com.ga.tc.common.exception.TCException;
import com.ga.tc.common.ui.MainFrame;
import com.ga.tc.security.bao.SecurityBao;
import com.ga.tc.security.bao.SecurityBaoImpl;
import com.ga.tc.security.dto.RoleInfoDto;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class CreateRole extends javax.swing.JPanel {
    private SecurityBao business = new SecurityBaoImpl();
    /**
     * Creates new form CreateRole
     */
    public CreateRole() {
        initComponents();
        rolesTable.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        deslbl = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descTxt = new javax.swing.JTextArea();
        saveBtn = new javax.swing.JButton();
        errorMsg = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rolesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        isActiveChk = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        idLbl = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Create New Role"));

        jLabel1.setText("Name (*)");

        deslbl.setText("Description");

        descTxt.setColumns(20);
        descTxt.setRows(5);
        jScrollPane1.setViewportView(descTxt);

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        errorMsg.setForeground(new java.awt.Color(255, 0, 0));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("All Roles")));
        fillInRolesTable();

        rolesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        fillInRolesTables();
        rolesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rolesTableMouseClicked(evt);
            }
        });
        rolesTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rolesTableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(rolesTable);

        jLabel2.setText("Is Active?");

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Id:");

        idLbl.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(deslbl)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(isActiveChk)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(nameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                        .addComponent(idLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(errorMsg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(idLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deslbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(isActiveChk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try{
          StringBuilder msg = new StringBuilder("");
            if("".equals(nameTxt.getText().trim())){
                msg.append("-Enter Role Name !!");
            }
            if(!msg.toString().equals("")){
                errorMsg.setText(msg.toString());
                errorMsg.setVisible(true);
            }else{
                ///connect to back end and Save the role
                errorMsg.setText("");
                errorMsg.setVisible(false);
                MainFrame main = (MainFrame)this.getParent().getParent().getParent();
                RoleInfoDto role = new RoleInfoDto(new Integer(idLbl.getText()),nameTxt.getText().trim(), descTxt.getText().trim(),isActiveChk.getModel().isSelected());
                int result = main.getSecurityBusiness().save(role);
                if(result > 0){
                    JOptionPane.showMessageDialog(this, "Role is saved sucessfully" ,"Success", JOptionPane.INFORMATION_MESSAGE);
                    resetCreationPanel();
                    //update roles table model
                    if(Integer.parseInt(idLbl.getText().toString())>0){
                        DefaultTableModel model = (DefaultTableModel)rolesTable.getModel();
                        int selRow = rolesTable.getSelectedRow();
                        model.setValueAt(role.getName(), selRow, 1);
                        model.setValueAt(role.getDescription(), selRow, 2);
                        model.setValueAt(role.isActive(), selRow, 3);
                    }else{
                        DefaultTableModel model = (DefaultTableModel)rolesTable.getModel();
                        model.addRow(new Object[]{result, role.getName(), role.getDescription(),true});
                    }
                    
                }else
                    JOptionPane.showMessageDialog(this, "User is NOT saved sucessfully" ,"Error", JOptionPane.ERROR_MESSAGE);
            }  
        }catch(TCException e){
            JOptionPane.showMessageDialog(this, e.getExactMessage() ,"Error", JOptionPane.ERROR_MESSAGE);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void rolesTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rolesTableKeyPressed
        
        
    }//GEN-LAST:event_rolesTableKeyPressed

    private void rolesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolesTableMouseClicked
        // TODO add your handling code here:
        try{
            int selectedRow = rolesTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel)rolesTable.getModel();
            idLbl.setText(model.getValueAt(selectedRow, 0).toString());
            nameTxt.setText(model.getValueAt(selectedRow, 1).toString());
            descTxt.setText(model.getValueAt(selectedRow, 2).toString());
            isActiveChk.getModel().setSelected((boolean)model.getValueAt(selectedRow, 3));
            
            //rolesTable.setModel(model);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_rolesTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        fillInRolesTables();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            int selectedRow = rolesTable.getSelectedRow();
            if(selectedRow >=0 ){
                int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete selected row?");
                if(choice == 0){
                    DefaultTableModel model =  (DefaultTableModel)rolesTable.getModel();
                    if(business.delete((Integer)model.getValueAt(selectedRow, 0))){
                        model.removeRow(selectedRow);
                        rolesTable.setModel(model);
                        resetCreationPanel();
                        JOptionPane.showMessageDialog(this, "Role is saved sucessfully" ,"Success", JOptionPane.INFORMATION_MESSAGE);
                        
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Select a role first!!!" ,"Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }catch(Exception e){
           JOptionPane.showMessageDialog(this, e.getMessage() ,"Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descTxt;
    private javax.swing.JLabel deslbl;
    private javax.swing.JLabel errorMsg;
    private javax.swing.JLabel idLbl;
    private javax.swing.JCheckBox isActiveChk;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTable rolesTable;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables

    private void resetCreationPanel() {
        nameTxt.setText("");
        descTxt.setText("");
    }

    private void fillInRolesTable() {
        try{
            List<RoleInfoDto> roles = business.listAll(Constants.STATUS_LIST_ALL);
            if(roles != null && !roles.isEmpty()){
                Object [][] data = new Object [roles.size()][4];
                for(int index =0; index<roles.size(); index++){
                    data [index][0] = roles.get(index).getId();
                    data [index][1] = roles.get(index).getName();
                    data [index][2] = roles.get(index).getDescription();
                    data [index][3] = roles.get(index).isActive();
                }
                rolesTable.setModel(new javax.swing.table.DefaultTableModel(data, 
                new String [] {
                    "ID", "Name", "Descriptin", "Is Active?"
                }));
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage() ,"Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillInRolesTables() {
        try{
            List<RoleInfoDto> roles = business.listAll(Constants.STATUS_LIST_ALL);
            if(roles != null && !roles.isEmpty()){
                Object [][] data = new Object [roles.size()][4];
                for(int index =0; index<roles.size(); index++){
                    data [index][0] = roles.get(index).getId();
                    data [index][1] = roles.get(index).getName();
                    data [index][2] = roles.get(index).getDescription();
                    data [index][3] = roles.get(index).isActive();
                }
                DefaultTableModel model = new javax.swing.table.DefaultTableModel(data,new String[]{"ID", "Name", "Descriptin", "Is Active?"});
                rolesTable = new JTable(model){
                    @Override
                    public Class<?> getColumnClass(int column) {
                        switch(column){
                            case 0:
                                return Integer.class;
                            case 1:
                                return String.class;
                            case 2:
                                return String.class;
                            case 3:
                                return Boolean.class;
                            default:
                                return Integer.class;
                        }
                    }  
                };
                
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage() ,"Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
